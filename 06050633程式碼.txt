#include <LBLE.h>
#include <LBLEPeriphral.h>

void setup() {
  Serial.begin(9600);

  Serial.println("BLE begin");
  LBLE.begin();
  while (!LBLE.ready()) {
    delay(100);
  }
  Serial.println("BLE ready");

  LBLEAdvertisementData beaconData;
  
  LBLEUuid uuid("06050811-DFFB-48D2-B060-D0F5A71096E0");
  beaconData.configAsIBeacon(uuid, 8, 11, -40);

  Serial.print("Start advertising iBeacon with uuid=");
  Serial.println(uuid);

  LBLEPeripheral.advertise(beaconData);
}

void loop() {
  delay(300);
}
Check Point 2
#include <LBLE.h>
#include <LBLEPeriphral.h>

void setup() {
  Serial.begin(115200);

  Serial.println("BLE begin");
  LBLE.begin();
  while (!LBLE.ready()) {
    delay(100);
  }
  Serial.println("BLE ready");

  LBLEAdvertisementData beaconData;

  beaconData.configAsEddystoneURL(EDDY_HTTPS, "06050811", EDDY_DOT_COM);

  Serial.print("Start advertising Eddystone-URL");

  LBLEPeripheral.advertiseAsBeacon(beaconData);
}

void loop() {

  delay(3000);
}
Check Point 3
#include <LBLE.h>
#include <LBLEPeriphral.h>

LBLEService ledService("06050633-E8F2-537E-4F6C-D104768A1214");
LBLECharacteristicInt switchCharacteristic("19B10011-E8F2-537E-4F6C-D104768A1214", LBLE_READ | LBLE_WRITE);

void setup() {
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, LOW);

  Serial.begin(9600);

  Serial.println("BLE begin");
  LBLE.begin();
  while (!LBLE.ready()) {
    delay(100);
  }
  Serial.println("BLE ready");
  Serial.print("device address is:");
  Serial.println(LBLE.getDeviceAddress());

  LBLEAdvertisementData advertisement;
  advertisement.configAsConnectableDevice("aaa");

  LBLEPeripheral.setName("aaa");

  ledService.addAttribute(switchCharacteristic);

  LBLEPeripheral.addService(ledService);

  LBLEPeripheral.begin();

  LBLEPeripheral.advertise(advertisement);
}

void loop() {
  delay(100);
  if (switchCharacteristic.isWritten()) {
    const char value = switchCharacteristic.getValue();
    switch (value) {
      case '1':
        digitalWrite(LED_BUILTIN, HIGH);
        break;
      case '0':
        digitalWrite(LED_BUILTIN, LOW);
        break;
      default:
        break;
    }
  }
}
